name: Compilation + Déploiement

on: push

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: MémoMath - v${{ github.run_number }}
          draft: false
          prerelease: false
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
  build:
    runs-on: ubuntu-latest
    name: 'Compilation pour ${{ matrix.targetPlatform }} avec Unity v${{ matrix.unityVersion }}'
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        unityVersion:
          - 2019.4.0f1
        targetPlatform:
          - StandaloneOSX
          - StandaloneWindows
          - StandaloneWindows64
          - StandaloneLinux64
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: webbertakken/unity-builder@v1.0
        with:
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
      - run: ls
      - run: ls -R build
      - run: '[ -d build/StandaloneOSX/StandaloneOSX.app/Contents/MacOS ] && chmod +x build/StandaloneOSX/StandaloneOSX.app/Contents/MacOS/*'
        continue-on-error: true
      - uses: papeloto/action-zip@v1
        with:
          files: build/
          dest: build.zip
      - uses: frabert/replace-string-action@v1.1
        id: platform-name
        with:
          pattern: 'Standalone(\w+)'
          string: ${{ matrix.targetPlatform }}
          replace-with: '$1'
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./build.zip
          asset_name: ${{ steps.platform-name.outputs.replaced }}.zip
          asset_content_type: application/zip
